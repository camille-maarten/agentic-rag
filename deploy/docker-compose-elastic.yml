services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: elasticsearch
    ports:
      - "9200:9200" # HTTP API port
      - "9300:9300" # Node-to-node communication port
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.ml.enabled=true
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
#      - ES_JAVA_OPTS=-Xms6g -Xmx6g
    deploy:
      resources:
        reservations:
          memory: 6G
        limits:
          memory: 6G
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BUCKETS: jakarata12-bucket  # init with bucket
    volumes:
      - ./data:/data
      - ./config:/root/.minio
    command: server /data --console-address ":9001"

  initializer:
    image: alpine:latest
    entrypoint: sh
    command: # copy file in documents
      - -c
      - |
        apk add --no-cache curl jq;     # Install necessary tools
        until curl -s http://minio:9000/minio/health/ready >/dev/null; do
          echo "Waiting for MinIO to start...";
          sleep 2;
        done;
        echo "MinIO is ready. Installing MinIO client (mc)...";
        wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/bin/mc && chmod +x /usr/bin/mc;
        echo "Uploading file...";
        mc alias set myminio http://minio:9000 minioadmin minioadmin;
        mc mb myminio/jakarata12-bucket || true; # Ensure the bucket exists
        mc cp --recursive /documents/ myminio/jakarata12-bucket/; # Explicitly specify the file path
    depends_on:
      - minio
    volumes:
      - ../documents:/documents         # Mount the 'documents' directory into the container